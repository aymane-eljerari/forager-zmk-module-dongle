#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// screenshot not working

// COMMA to KP_COMMA not macos compatible yet

// add defines for longer codes
// #define MEH LS(LC(LALT))


#define BASE 0
#define SYM  1
#define NUM  2
#define DSK  3
#define NAV  4
#define APP  5
#define ONE  6


/ {
    behaviors {

        // &mo DSK + LALT
        lm: layer_mod {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_2to1>
                , <&macro_release &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };


        // yabai scratchpad apps
        am: app_macro {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings
                = <&macro_press &kp LSHIFT &kp LCTRL &kp LALT &kp LCMD>
                , <&macro_param_1to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_release &kp LSHIFT &kp LCTRL &kp LALT &kp LCMD>
                ;
        };

        // NAV layer utils
        mm: misc_macro {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings
                = <&macro_press &kp LCMD &kp LSHIFT>
                , <&macro_param_1to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_release &kp LCMD &kp LSHIFT>
                ;
        };

        lck: lock_screen_macro {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings
                = <&macro_press &kp LCMD &kp LCTRL>
                , <&macro_param_1to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_release &kp LCMD &kp LCTRL>
                ;
        };

        cam: camera_macro {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings
                = <&macro_press &kp LALT &kp LCTRL &kp LSHIFT>
                , <&macro_param_1to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_release &kp LALT &kp LCTRL &kp LSHIFT>
                ;
        };


    };

    combos {
        compatible = "zmk,combos";
        combo_lcmd {
            timeout-ms = <30>;
            key-positions = <12 13>;
            bindings = <&kp LCMD>;
            layers = <0>;
        };

        combo_rcmd {
            timeout-ms = <30>;
            key-positions = <16 17>;
            bindings = <&kp LCMD>;
            layers = <0>;
        };

        combo_lalt {
            timeout-ms = <30>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
            layers = <0>;
        };

        combo_ralt {
            timeout-ms = <30>;
            key-positions = <17 18>;
            bindings = <&kp LALT>;
            layers = <0>;
        };

        combo_lctrl {
            timeout-ms = <30>;
            key-positions = <11 13>;
            bindings = <&kp LCTRL>;
            layers = <0>;
        };

        combo_rctrl {
            timeout-ms = <30>;
            key-positions = <16 18>;
            bindings = <&kp LCTRL>;
            layers = <0>;
        };

        combo_l_shft_ctrl {
            timeout-ms = <30>;
            key-positions = <11 12 13>;
            bindings = <&kp LS(LCTRL)>;
            layers = <0>;
        };

        combo_r_shft_ctrl {
            timeout-ms = <30>;
            key-positions = <16 17 18>;
            bindings = <&kp LS(LCTRL)>;
            layers = <0>;
        };

        combo_one_hand {
            timeout-ms = <30>;
            key-positions = <1 2>;
            bindings = <&to ONE>;
            layers = <0>;
        };
    };



    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "Base";
            bindings = <
            &kp B           &kp L           &kp D           &kp C           &kp V                                           &kp J           &kp F           &kp O           &kp U           &kp ESC
            &kp N           &kp R           &kp T           &kp S           &kp G                                           &kp Y           &kp H           &kp A           &kp E           &kp I
            &kp X           &kp Q           &kp M           &kp W           &kp Z                                           &kp K           &kp P           &kp SLASH       &kp KP_DOT      &kp COMMA
                                                            &lm DSK LALT    &mo SYM                                         &kp SPACE       &kp LSHIFT
            >;
        };

        sym {
            display-name = "Symbol";
            bindings = <
            &none          &kp PERCENT     &kp LPAR         &kp RPAR        &kp AT                                          &kp KP_PLUS     &kp LBKT        &kp RBKT        &none           &none
            &kp TAB        &kp CARET       &kp STAR         &kp KP_EQUAL    &kp DOLLAR                                      &kp BACKSPACE   &kp SEMICOLON   &kp APOSTROPHE  &kp BACKSLASH   &kp ENTER
            &kp LCTRL      &kp UNDER       &kp LT           &kp GT          &kp HASH                                        &kp KP_MINUS    &kp AMPERSAND   &kp EXCL        &kp GRAVE       &none
                                                            &none           &none                                           &mo NUM         &kp LSHIFT
            >;
        };

        num {
            display-name = "Number";
            bindings = <
            &none           &kp PERCENT     &kp LPAR        &kp RPAR        &none                                           &kp KP_PLUS     &kp KP_N7       &kp KP_N8       &kp KP_N9       &none
            &kp KP_DOT      &kp KP_DIVIDE   &kp STAR        &kp KP_EQUAL    &none                                           &kp BACKSPACE   &kp KP_N4       &kp KP_N5       &kp KP_N6       &kp ENTER
            &none           &kp COMMA       &kp LT          &kp GT          &none                                           &kp KP_MINUS    &kp KP_N1       &kp KP_N2       &kp KP_N3       &kp SPACE
                                                            &kp KP_N0       &kp LCMD                                        &none          &none
            >;
        };

        dsk {
            display-name = "Desk";
            bindings = <
            &kp B           &kp LSHIFT      &kp LCTRL       &kp LCMD        &kp V                                           &kp Y            &kp F           &kp O           &kp U           &none
            &kp N           &kp N1          &kp N2          &kp N3          &kp G                                           &kp H            &kp J           &kp K           &kp L           &kp I
            &kp X           &kp Q           &kp M           &kp W           &kp Z                                           &none            &kp P           &kp T           &kp D           &none
                                                            &none           &none                                           &mo NAV          &mo APP
            >;
        };

        nav {
            display-name = "Nav";
            bindings = <
            &kp C_BRI_UP    &kp C_MUTE      &kp C_VOL_DN    &kp C_VOL_UP    &kp LCTRL                                       &cam KP_PLUS    &cam F          &cam O          &none           &none
            &kp C_BRI_DN    &kp C_PREV      &kp C_PP        &kp C_NEXT      &kp LSHIFT                                      &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT       &kp ENTER
            &mm N5          &lck Q          &mm S           &mm D           &kp LA(LS(LCTRL))                               &cam KP_MINUS   &cam P          &cam U          &cam R          &none
                                                            &kp LALT        &kp LCMD                                        &none           &studio_unlock
            >;
        };

        app {
            display-name = "App";
            bindings = <
            &am B           &am L           &am D           &am C           &am V                                           &am J           &am F           &am O           &am U           &none
            &am N           &am R           &am T           &am S           &am G                                           &am Y           &am H           &am A           &am E           &am I
            &am X           &am Q           &am M           &am W           &am Z                                           &am K           &am P           &none           &none          &none
                                                            &none           &none                                           &none           &none
            >;
        };


        one {
            display-name = "One";
            bindings = <
            &to BASE        &kp LSHIFT      &kp ESC         &kp BACKSPACE   &none                                           &none           &none           &none           &none           &none
            &kp LG(A)       &kp LG(C)       &kp LG(X)       &kp LG(V)       &none                                           &none           &none           &none           &none           &none
            &none           &none           &none           &none           &none                                           &none           &none           &none           &none           &none
                                                            &none           &none                                           &none           &none
            >;
        };
    };
};

